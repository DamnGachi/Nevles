"""comment

Revision ID: 5506365ad3ff
Revises: 
Create Date: 2023-02-09 16:03:10.330339

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = '5506365ad3ff'
down_revision = None
branch_labels = None
depends_on = None
SONG_STATUS = (
    ('LIKED', 'liked'),
    ('NOT_LIKED', 'not_liked')
    # ('IN_PLAYLIST', 'in_playlist'),
    # ('NOT_IN_PLAYLIST', 'not_in_playlist')
)
SONG_STATUS_PLAYLIST = (
    ('IN_PLAYLIST', 'in_playlist'),
    ('NOT_IN_PLAYLIST', 'not_in_playlist')
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('articles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=100), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('title')
                    )
    op.create_index(op.f('ix_articles_id'), 'articles', ['id'], unique=False)
    op.create_table('items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('price', sa.Integer(), nullable=False),
                    sa.Column('on_offer', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('songs',
                    sa.Column('song_id', sa.UUID(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('creator', sa.String(), nullable=False),
                    sa.Column('song_file', sa.String(), nullable=False),
                    sa.Column('song_status', sqlalchemy_utils.types.choice.ChoiceType(choices=SONG_STATUS),
                              default="NOT_LIKED"),
                    sa.Column('verified', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('song_id'),
                    sa.UniqueConstraint('name'),
                    sa.UniqueConstraint('song_file')
                    )
    op.create_table('users',
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('nickname', sa.String(), nullable=False),
                    sa.Column('email_address', sa.String(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('is_subscriber', sa.Boolean(), nullable=True),
                    sa.Column('hashed_password', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('user_id'),
                    sa.UniqueConstraint('email_address'),
                    sa.UniqueConstraint('nickname')
                    )
    op.create_table('PlayList',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('order_status', sqlalchemy_utils.types.choice.ChoiceType(choices=SONG_STATUS_PLAYLIST),
                              default="NOT_LIKED"),
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column('song_id', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['song_id'], ['songs.song_id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('PlayList')
    op.drop_table('users')
    op.drop_table('songs')
    op.drop_table('items')
    op.drop_index(op.f('ix_articles_id'), table_name='articles')
    op.drop_table('articles')
    # ### end Alembic commands ###
